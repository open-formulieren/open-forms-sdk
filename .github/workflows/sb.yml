name: Build and publish storybook

# Run this workflow every time a new commit pushed to your repository
on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review
  workflow_dispatch:

# Allow one concurrent deployment
concurrency:
  group: 'pages-${{ github.ref_name }}' # unique builds for branch/tag name
  cancel-in-progress: true

jobs:
  storybook:
    name: Create storybook build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5
        with:
          submodules: true
      - uses: actions/setup-node@v5
        with:
          node-version-file: '.nvmrc'
          cache: npm

      - name: Build Storybook docs
        run: |
          npm ci
          npm run build:design-tokens && npm run build:storybook

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v4
        with:
          path: ./storybook-static

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
    permissions:
      contents: read
      pages: write
      id-token: write

    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push' # Exclude PRs
    needs: storybook
    steps:
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  tests:
    name: Run Storybook tests
    runs-on: ubuntu-latest
    needs:
      - storybook

    steps:
      - uses: actions/checkout@v5
        with:
          submodules: true
      - uses: actions/setup-node@v5
        with:
          node-version-file: '.nvmrc'
          cache: npm

      # Reference: https://storybook.js.org/docs/react/writing-tests/test-runner#run-against-non-deployed-storybooks
      - name: Set up test environment
        run: |
          npm ci
          npx playwright install --with-deps

      - name: Download build artifact
        uses: actions/download-artifact@v5
        with:
          name: github-pages
          path: ./storybook-static

      - name: Extract artifact
        run: |
          tar -xvf artifact.tar
          rm artifact.tar
        working-directory: ./storybook-static

      - name: Serve storybook and run tests
        run: |
          npx concurrently -k -s first -n "SB,TEST" -c "magenta,blue" \
            "npx http-server storybook-static --port 6006 --quiet" \
            "npx wait-on -l http://127.0.0.1:6006 && npm run test:storybook"
        env:
          TZ: Europe/Amsterdam

      - name: Prepare coverage for codecov
        run: |
          npx nyc report --reporter=lcov -t coverage/storybook --report-dir coverage/storybook

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: storybook

  chromatic:
    name: Visual regression test with Chromatic
    runs-on: ubuntu-latest
    needs:
      - storybook

    # do not run in forks
    if: github.event_name == 'push' || ! github.event.pull_request.head.repo.fork

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0 # ðŸ‘ˆ Required to retrieve git history

      - name: Download build artifact
        uses: actions/download-artifact@v5
        with:
          name: github-pages
          path: ./storybook-static

      - name: Extract artifact
        run: |
          tar -xvf artifact.tar
          rm artifact.tar
        working-directory: ./storybook-static

      - name: Publish to Chromatic for visual regression tests
        uses: chromaui/action@latest
        if: github.event.pull_request.draft == false || github.event.push
        with:
          autoAcceptChanges: main
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          storybookBuildDir: ./storybook-static
          onlyChanged: true
          externals: 'src/img/**'

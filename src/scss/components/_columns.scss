@use 'sass:math';

@import '~microscope-sass/lib/responsive';

$col-sizes: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12;
$col-sizes--mobile: 1, 2, 3, 4;

// A modern, NL DS compatible grid layout to lay out the columns.
.openforms-columns {
  display: grid;
  grid-template-columns: repeat(12, 1fr);
  // default value for backwards compatibility reasons
  column-gap: var(--of-columns-column-gap, 8px);
  // columns should not wrap, but there's no guarantee they don't, so reserve space
  // consistent with the rest of the UI.
  row-gap: var(--of-columns-row-gap, var(--of-form-field-container-gap, 24px));

  .column {
    box-sizing: border-box;
    grid-column: span var(--_of-columns-column-span);

    @each $col-size in $col-sizes {
      &--span-#{$col-size} {
        --_of-columns-column-span: #{$col-size};
      }
    }
  }

  @include mobile-only {
    grid-template-columns: repeat(4, 1fr);
    column-gap: var(--of-columns-column-mobile-gap, var(--of-columns-column-gap, 8px));
    row-gap: var(--of-columns-row-mobile-gap, var(--of-columns-row-gap, 24px));

    .column {
      // if not configured explicitly, assume full width.
      --_of-columns-column-span: 4;
    }

    @each $col-size in $col-sizes--mobile {
      .column.column--span-mobile-#{$col-size} {
        --_of-columns-column-span: #{$col-size};
      }
    }
  }
}

@use 'sass:math';

@import '~microscope-sass/lib/grid';
@import '~microscope-sass/lib/typography';

@import '../mixins/bem';
@import '../mixins/bootstrap';
@import '../mixins/prefix';

$column-gap-size: $grid-margin-1;
$column-half-gap-size: math.div($column-gap-size, 2);

$col-sizes: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12;
$col-sizes--mobile: 1, 2, 3, 4;

.#{prefix(columns)} {
  display: flex;
  flex-direction: row;

  .column {
    box-sizing: border-box;
  }

  @include mobile-only {
    flex-wrap: wrap;

    .column {
      width: 100%;
      flex-basis: 100%;

      &:not(:first-child) {
        padding-top: $grid-margin-3;
      }

      @each $col-size in $col-sizes--mobile {
        &--span-mobile-#{$col-size} {
          $width: math.div($col-size, 4) * 100%;
          width: $width;
          max-width: $width;
          flex-basis: $width;

          &:not(:first-child) {
            padding-top: 0;
          }
        }
      }
    }
  }

  @include desktop {
    .column {
      @each $col-size in $col-sizes {
        &--span-#{$col-size} {
          @include bootstrap-span(max-width, $col-size);
        }
      }
    }
  }

  // ideally, we would use gap, but Opera doesn't support that yet with flexbox :(
  // Instead, we work around it by setting paddings on the child elements and negative
  // margins on the parent.
  // gap: $column-gap-size;

  // apply the negative margins to account for the first and last column paddings
  margin-left: -$column-half-gap-size;
  margin-right: -$column-half-gap-size;

  > * {
    flex: 1;
    padding-left: $column-half-gap-size;
    padding-right: $column-half-gap-size;
  }
}

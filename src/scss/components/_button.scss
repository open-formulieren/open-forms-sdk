@import '~microscope-sass/lib/grid';
@import '~microscope-sass/lib/typography';

@import '../mixins/bem';
@import '../mixins/prefix';

$button-line-height: $typography-line-height-text-big * $typography-font-size-text-big;
// Cannot move this to a CSS variable, since the unit cannot be removed in CSS
$button-line-height-px: $button-line-height / ($button-line-height * 0 + 1) * 16px;

@mixin button-theme($name, $color, $color-background, $color-border: $color-background, $decorate-on-hover: false) {
  @if $name == '' {
    @include button-style($color, $color-background, $color-border, $decorate-on-hover);
  } @else {
    &--#{$name} {
      @include button-style($color, $color-background, $color-border, $decorate-on-hover);
    }
  }
}

@mixin button-style($color, $color-background, $color-border: $color-background, $decorate-on-hover: false) {
  color: $color;
  background-color: $color-background;

  // position: relative;

  // &::before {
  //   position: absolute;
  //   content: "";
  //   width: 100%;
  //   height: 100%;
  //   border-right: 2px solid;
  //   border-bottom: 2px solid;
  //   border-right-color: inherit;
  //   border-bottom-color: inherit;

  //   // Doesnt work with inherit? https://stackoverflow.com/questions/21844935/css-filter-inherit-issue-solution-without-pseudo-element-for-dynamic-sized-divs
  //   filter: brightness(90%);
  //   top: 0;
  //   left: 0;
  // }

  &:hover {
    // background-color: scale_color(var(--of-color-background, $color-background), $lightness: -20%);
    // border-right-color: scale_color(var(--of-color-border, $color-border), $lightness: -20%);
    // border-bottom-color: scale_color(var(--of-color-border, $color-border), $lightness: -20%);
    background-color: var(--of-color-background, $color-background);
    border-right-color: var(--of-color-border, $color-border);
    border-bottom-color: var(--of-color-border, $color-border);

    @if $decorate-on-hover {
      @include anchor(true);
    }
  }

  &:active {
    // color: scale_color($color, $lightness: -25%);
    // background-color: scale_color(var(--of-color-background, $color-background), $lightness: -25%);
    // border-top-color: scale_color(var(--of-color-border, $color-border), $lightness: -20%);
    // border-right-color: transparent;
    // border-left-color: scale_color(var(--of-color-border, $color-border), $lightness: -20%);
    // border-bottom-color: transparent;
    color: $color;
    background-color: var(--of-color-background, $color-background);
    border-top-color: var(--of-color-border, $color-border);
    border-right-color: transparent;
    border-left-color: var(--of-color-border, $color-border);
    border-bottom-color: transparent;
  }
}

.#{prefix(button)} {
  @include body;
  @include body--big;
  @include border(all, $color: transparent, $size: 2px);
  @include button-theme('primary', var(--of-color-background, $color-background), var(--of-color-primary, $color-primary), var(--of-color-primary, $color-primary));
  @include button-theme('', var(--of-typography-color-text, $typography-color-text), var(--of-color-background, $color-background), var(--of-color-border, $color-border));
  @include button-theme('anchor', var(--of-typography-color-link, $typography-color-link), transparent, transparent, true);
  @include button-theme('danger', scale_color($color-danger, $lightness: 90%), var(--of-color-danger, $color-danger), scale_color($color-danger, $lightness: -20%));
  appearance: none;
  border-radius: 0;
  display: flex;
  align-items: center;

  --of-button-padding-v: calc((var(--of-grid-row-height, #{$grid-row-height}) - #{$button-line-height-px}) / 2 - var(--of-typography-size-border, #{$typography-size-border}));
  --of-button-padding-h: var(--of-grid-margin-2, #{$grid-margin-2});
  padding: var(--of-button-padding-v) var(--of-button-padding-h);

  text-decoration: none;
  float: left;

  @media print {
    display: none;
  }

  &:not([disabled]) {
    cursor: pointer;
  }

  @include modifier('image') {
    @include rows(1);
    border: none;
    padding: 0;
  }

  .fa-icon:not(:last-child) {
    margin-right: var(--of-grid-margin-2, #{$grid-margin-2});
  }
}
